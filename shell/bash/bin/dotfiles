#!/usr/bin/env bash

#  Setup / Cleanup {{{
# Performs initial setup.
function setup() {
  log_info "Setting up...";
}

# Cleanup after the program finishes.
function cleanup() {
  log_info "Cleaning up...";
}
trap cleanup EXIT
# }}}

# Primary Functions {{{
# Re-link all primary dotfiles in the user's $HOME directory.
function link_home_dotfiles() {
  log_info "Linking dotfiles...";
  find "$LINK_HOME" -type f -exec ln -sf '{}' "$HOME/" \;
}

function update_system_packages() {
  log_info "Upgrading system packages...";
  local pm;
  pm="$(getpm)";
  eval "sudo $pm update && sudo $pm upgrade";
}

function update_npm_global_packages() {
  log_info "Upgrading NPM packages...";
  npm config set prefix "$HOME/.npm-global";
  npm update -g;
}

function update_pip_user_packages() {
  log_info "Upgrading PIP packages for Python 2";
  pip install --user --upgrade -r <(pip freeze);

  log_info "Upgrading PIP packages for Python 3";
  pip3 install --user --upgrade -r <(pip3 freeze);
}

# Mass update function that upgades packages from a variety of platforms and package managers.
function update_packages() {
  update_system_packages;
  update_npm_global_packages;
  update_pip_user_packages;
}

# Primary program entry point.
function main() {
  setup;
  link_home_dotfiles;
  update_packages;
}
# }}}

# Variable Definitions {{{
# Directories
declare DOTFILES_HOME="$HOME/.dotfiles";
declare DOTFILES_REPO="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)";
declare DOTFILES_LINK="$DOTFILES_REPO/link";
declare DOTFILES_SOURCE="$DOTFILES_REPO/bash/source";
declare LINK_HOME="$DOTFILES_LINK/home";
declare LINK_CONFIG="$DOTFILES_LINK/config";
declare BACKUP_DIR="$DOTFILES_REPO/backup";
declare -a BACKUP_FILES=($(find "$LINK_HOME" -type f -exec basename '{}' \;));

# Colors {{{
# Foreground:
declare NC="\e[39m"; # Default color
declare BLACK="\e[30m";
declare RED="\e[31m";
declare GREEN="\e[32m";
declare YELLOW="\e[33m";
declare BLUE="\e[34m";
declare MAGENTA="\e[35m";
declare CYAN="\e[36m";
declare LIGHT_GRAY="\e[37m";
declare DARK_GRAY="\e[90m";
declare LIGHT_RED="\e[91m";
declare LIGHT_GREEN="\e[92m";
declare LIGHT_YELLOW="\e[93m";
declare LIGHT_BLUE="\e[94m";
declare LIGHT_MAGENTA="\e[95m";
declare LIGHT_CYAN="\e[96m";
declare WHITE="\e[97m";

# Background:
declare NBG="\e[49m"; # Default background
declare BLACK_BG="\e[40m";
declare RED_BG="\e[41m";
declare GREEN_BG="\e[42m";
declare YELLOW_BG="\e[43m";
declare BLUE_BG="\e[44m";
declare MAGENTA_BG="\e[45m";
declare CYAN_BG="\e[46m";
declare LIGHT_GRAY_BG="\e[47m";
declare DARK_GRAY_BG="\e[100m";
declare LIGHT_RED_BG="\e[101m";
declare LIGHT_GREEN_BG="\e[102m";
declare LIGHT_YELLOW_BG="\e[103m";
declare LIGHT_BLUE_BG="\e[104m";
declare LIGHT_MAGENTA_BG="\e[105m";
declare LIGHT_CYAN_BG="\e[106m";
declare WHITE_BG="\e[107m";
# }}}
# }}}

# Source Includes {{{
source "$DOTFILES_SOURCE/aliases_universal.bash";
source "$DOTFILES_SOURCE/functions_log.bash";
source "$DOTFILES_SOURCE/functions_universal.bash";
source "$DOTFILES_SOURCE/functions_os.bash";
# }}}

# Run the program.
main;

# vim:foldenable:foldmethod=marker
