#!/usr/bin/env bash

################################################################################
##                                                                            ##
##                               Usage Functions                              ##
##                                                                            ##
################################################################################

# Full help message
function gf_help() {
    echo "gf is a tool for searching for files on your machine. It is primarily an alias" 1>&2
    echo "for find, but it has some additional utilities as well."
}

# Usage message
function gf_usage() {
    echo "Usage:" 1>&2
    echo "    gf [-d <path to directory>] [file pattern]" 1>&2
}

################################################################################
##                                                                            ##
##                               Exit Functions                               ##
##                                                                            ##
################################################################################

# Exit the program if the user requests help
function exit_if_help_requested() {
    if [[ "$1" == "--help" || "$1" == "-h" ]]; then
        echo gf_help
        exit 0
    fi
}

################################################################################
##                                                                            ##
##                             Supporting Functions                           ##
##                                                                            ##
################################################################################

# Actually do the search
function perform_search() {
    if [[ "$#" -eq 2 ]]; then
        local dir_path="$1"
        local file_pattern="$2"
    elif [[ "$#" -eq 1 ]]; then
        local dir_path="."
        local file_pattern="$1"
    else
        local dir_path="."
        local file_pattern="*"
    fi

    find "$dir_path" -name "$file_pattern"
}

# Used for printing errors:
function echoe () { echo -e "${RED}ERROR${NC}: $@" 1>&2 ; }

# Used for printing warnings:
function echow () { echo -e "${BROWN_ORANGE}WARNING${NC}: $@" 1>&2 ; }

################################################################################
##                                                                            ##
##                                  Variables                                 ##
##                                                                            ##
################################################################################

dir_path="."
file_pattern="*"

################################################################################
##                                                                            ##
##                                 Main Program                               ##
##                                                                            ##
################################################################################

# Exit conditions:
exit_if_help_requested "$@"

while getopts ":d:" o; do
    case "${o}" in
        d)
            dir_path="${OPTARG}"
            ;;
        *)
            echoe "Unknown operand $o" 1>&2
            gf_usage
            exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

perform_search "$@"