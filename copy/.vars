#!/bin/sh

# This file holds environment varibles and should be kept in the HOME directory.

# General {{{
export NAME="Thomas Jacob Trabue"
# }}}

# Dotfiles {{{
export VAR_FILE="${HOME}/.vars"
export PATH_FILE="${HOME}/.path"
export LEAN_PROFILE="${HOME}/.lean_profile"
export DOTFILES_HOME="${HOME}/.dotfiles"
export DOTFILES_COPY="${DOTFILES_HOME}/copy"
export DOTFILES_LINK="${DOTFILES_HOME}/link"
export DOTFILES_CONFIG="${DOTFILES_LINK}/config"
export DOTFILES_INIT="${DOTFILES_HOME}/init"
export DOTFILES_SHELL="${DOTFILES_HOME}/shell"
export DOTSOURCE_BASH="${DOTFILES_SHELL}/bash/source"
export DOTSOURCE_ZSH="${DOTFILES_SHELL}/zsh/source"
export DOTFILES_PACKAGES_DIR="${DOTFILES_HOME}/init/package_files"
export DOTFILES_PLUGINS_DIR="${DOTFILES_HOME}/init/plugin_files"
export DOTFILES_PROJECTS_DIR="${DOTFILES_HOME}/init/project_lists"

# Other directories
export WS="${HOME}/workspace"
export APPS="${HOME}/applications"
export ARCHIVES="${APPS}/archives"
export USER_CONF="${HOME}/.config"

# Directory history file
export DIR_HIST_FILE="${HOME}/.dir_history"
# The number of lines to maintain in the DIR_HIST_FILE.
export DIR_HIST_LIMIT=30
# The file containing directory aliases.
export DIR_ALIAS_FILE="${HOME}/.dirs"
# }}}

# Editor {{{
# Use Neovim as default editor if available. Otherwise, fall back on Vim.
if [ -x "$(command -v nvim)" ]; then
  EDITOR="nvim"
elif [ -x "$(command -v vim)" ]; then
  EDITOR="vim"
else
  EDITOR="vi"
fi
export EDITOR

# The user's Neovim config directory.
export NVIM_HOME="${XDG_CONFIG_HOME:-${HOME}/.config}/nvim"

# Set GUI editor.
export VISUAL="emacs"

# Set the editor used by the 'sudoedit' command.
export SUDO_EDITOR="${EDITOR}"
# }}}

# Logging {{{
# The log level for logging output functions, such as `err`, `warn`, and
# `log_info`.
# ______________________________
# | Level Number | Ouput Level |
# |            1 | error       |
# |            2 | warning     |
# |            3 | info        |
# |            4 | debug       |
# ______________________________
export LOG_LEVEL=3
# }}}

# Elixir {{{
# Enable iex shell history for easy access to previously run commands.
export ERL_AFLAGS="-kernel shell_history enabled"
# }}}

# Java {{{
# Commented out because jenv takes care of setting java home for us.
# Can uncomment if jenv is unused.
# export JAVA_HOME="/usr/lib/jvm/default"

# jenv is a Java version manager similar to rbenv for Ruby.
# You can install it by simply cloning its GitHub repo to this directory.
# (see init_jenv for automated install script)
export JENV_HOME="${HOME}/.jenv"

# Home directory for sdkman, the Java toolchain version manager.
export SDKMAN_DIR="${HOME}/.sdkman"
# }}}

# Groovy {{{
# Groovy is another tool that SDKMAN can install and setup.
# Uncomment and set if you do not use SDKMAN to manage Groovy.
# export GROOVY_HOME="/usr/local/opt/groovy/libexec"
# }}}

# NodeJS {{{
export NPM_CONFIX_PREFIX="${HOME}/.npm-global"
export NODE_PACKAGES_FILE="$DOTFILES_HOME/init/package_files/node_packages.txt"
# nvm home directory.
export NVM_DIR="${HOME}/.nvm"
# }}}

# Go Lang {{{
export GO_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/go_urls.txt"
# }}}

# ls (file listing) {{{
# Whether or not to use ls-icons (if available)
export USE_LS_ICONS=true
# The directory housing the $LS_COLORS database files
export DIRCOLORS_DIR="${USER_CONF}/dircolors"
# The selected $LS_COLORS database file.
export DIRCOLORS_FILE="${DIRCOLORS_DIR}/tomorrow-night-eighties.dircolors"
# }}}

# Pager {{{
# Set the manpager to less, instead of col (the default)
export MANPAGER="less -X"

# If available, use `bat` as a colorized manpager
if [ -x "$(command -v bat)" ]; then
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

# Less and Less termcap variables {{{
export LESS="-X --RAW-CONTROL-CHARS -i"

# Termcap
export LESS_TERMCAP_mb=$(
  tput bold
  tput setaf 1
) # red
export LESS_TERMCAP_md=$(
  tput bold
  tput setaf 4
) # blue
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(
  tput bold
  tput setaf 0
  tput setab 3
) # black on yellow
export LESS_TERMCAP_se=$(
  tput rmso
  tput sgr0
)
export LESS_TERMCAP_us=$(
  tput smul
  tput bold
  tput setaf 2
) # green
export LESS_TERMCAP_ue=$(
  tput rmul
  tput sgr0
)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)
export GROFF_NO_SGR=1 # For Konsole and GNOME-Terminal
# }}}
# }}}

# PostgreSQL {{{
# System-dependent. You will need to change this depending on your platform and Postgres version!
export LD_LIBRARY_PATH="/usr/lib/postgresql/10/lib"
# }}}

# Python {{{
export PYTHON2_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/python2_user_packages.txt"
export PYTHON3_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/python3_user_packages.txt"
# Home directory for pyenv.
export PYENV_ROOT="${HOME}/.pyenv"
# Specify the directory where user packages should be installed.
export PYTHONUSERBASE="${HOME}/.local"
# }}}

# Perl {{{
export PERL_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/perl_packages.txt"
# CPAN configuration
PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"
export PATH
PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL5LIB
PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_LOCAL_LIB_ROOT
PERL_MB_OPT="--install_base \"${HOME}/perl5\""
export PERL_MB_OPT
PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"
export PERL_MM_OPT
# Silence prompts for ExitUtils::MakeMaker,
# opting to use the default response every time.
# This helps make the CPAN install process much more automatic.
# May need to set this to 0 if you find yourself in an infinite loop.
export PERL_MM_USE_DEFAULT=1
# }}}

# Ruby {{{
export RUBY_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/ruby_packages.txt"
# rvm home directory.
export RVM_DIR="${HOME}/.rvm"
# }}}

# Lua {{{
export LUA_PACKAGES_FILE="${DOTFILES_PACKAGES_DIR}/luarocks_packages.txt"
# }}}

# Common Lisp {{{
COMMON_LISP_PACKAGES_FILE="${DOTFILES_PACKAGES_DIR}/common_lisp_packages.txt"
export COMMON_LISP_PACKAGES_FILE
# }}}

# Terminal {{{
# Figure out which terminal program to use by default based on what is installed.
TERMINAL="$(command -v xterm)"
if [ "$(command -v "termite")" != "" ]; then
  TERMINAL="$(command -v "termite")"
elif [ "$(command -v "urxvt")" != "" ]; then
  TERMINAL="$(command -v "urxvt")"
elif [ "$(command -v "terminator")" != "" ]; then
  TERMINAL="$(command -v "terminator")"
else
  TERMINAL="$(command -v "xterm")"
fi
export TERMINAL
# }}}

# Display {{{
# X Environment Variables
export DISPLAY=":0.0"
# }}}

# FZF {{{
# Set default behavior for FZF on the command line
export FZF_DEFAULT_OPTS="--multi --cycle --border --inline-info --tabstop=4"

# Override the default find command to make FZF faster (if available)
if [ -x "$(command -v rg)" ]; then
  # Best case scenario: use ripgrep (fastest search tool)
  export FZF_DEFAULT_COMMAND="rg --hidden --files --glob ''"
elif [ -x "$(command -v ag)" ]; then
  # Use ag if it is found and ripgrep is unavailable
  export FZF_DEFAULT_COMMAND="ag --path-to-ignore ~/.agignore --hidden -g ''"
fi
# }}}

# ShellCheck {{{
export SHELLCHECK_OPTS="--external-sources"
# b}}}

# Mutt {{{
export MUTT_HOME="${USER_CONF}"
export MUTT_ATTACHMENTS_DIR="${MUTT_HOME}/attachments"
# }}}

# LLVM/Clang {{{
CLANGD_FLAGS="-j=$(nproc) --background-index --log=error --clang-tidy
--header-insertion-decorators --suggest-missing-includes"
export CLANGD_FLAGS
# }}}

# GNU Make {{{
# Use all of our processor cores by default
MAKEFLAGS="-j$(nproc)"
export MAKEFLAGS
# }}}

# Emacs {{{
export EMACS_CONFIG_HOME="${HOME}/.emacs.d"
# }}}

# Vim {{{
export VIM_CONFIG_HOME="${HOME}/.vim"
export VIM_SWAPS="${VIM_CONFIG_HOME}/swaps"
export VIM_BACKUPS="${VIM_CONFIG_HOME}/backups"
export VIM_AUTOLOAD="${VIM_CONFIG_HOME}/autoload"
# }}}

# Projects {{{
export CURRENT_PROJECTS_FILE="${DOTFILES_PROJECTS_DIR}/current_projects.txt"
# }}}

# Icons {{{
export USER_ICON_DIR="${HOME}/.local/share/icons"
# }}}

# thefuck {{{
# The alias to use for very cool "thefuck" typography correction program.
# I try not to swear.
export THEF_ALIAS="oops"
# }}}

# Email {{{
export EMAIL="tom.trabue@gmail.com"
export MAIL_DIR="${HOME}/Mail"
# }}}

# Bash completion {{{
export USER_BASH_COMPLETION_DIR="${HOME}/.bash_completion.d"
# }}}

# ASDF version manager {{{
export ASDF_DIR="${HOME}/.asdf"
export ASDF_PLUGINS_FILE="${DOTFILES_PLUGINS_DIR}/asdf_plugins.txt"
# }}}

# Additional variables will be added automatically to this location during
# installation based on which operating system we're using.
#<additional-vars-insert>

# vim:foldmethod=marker:
