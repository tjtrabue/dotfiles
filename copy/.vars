#!/usr/bin/env bash

# This file holds environment varibles and should be kept in the HOME directory.

# General {{{
export NAME="Thomas Jacob Trabue"
export EMAIL="tom.trabue@gmail.com"
# }}}

# Dotfiles {{{
export VAR_FILE="$HOME/.vars"
export DIR_ALIAS_FILE="$HOME/.dirs"
export PATH_FILE="$HOME/.path"
export DOTFILES_HOME="$HOME/.dotfiles"
export DOTSOURCE_BASH="$DOTFILES_HOME/bash/source"
export DOTSOURCE_ZSH="$DOTFILES_HOME/zsh/source"
export DOTFILES_PACKAGES_DIR="$DOTFILES_HOME/init/package_files"
export DOTFILES_PROJECTS_DIR="$DOTFILES_HOME/init/project_lists"

# Other directories
export WS="$HOME/workspace"
export APPS="$HOME/applications"
export ARCHIVES="$APPS/archives"
# }}}

# Editor {{{
# Use Neovim as default editor if available. Otherwise, fall back on Vim.
if [ "$(command -v nvim)" != "" ]; then
  export EDITOR="nvim"
else
  export EDITOR="vim"
fi
# }}}

# Elixir {{{
# Enable iex shell history for easy access to previously run commands.
export ERL_AFLAGS="-kernel shell_history enabled"
# }}}

# Java {{{
export JAVA_HOME="/usr/lib/jvm/default"
# }}}

# NodeJS {{{
export NPM_CONFIX_PREFIX="${HOME}/.npm-global"
export NPM_GLOBAL_PACKAGES_FILE="$DOTFILES_HOME/init/package_files/npm_global_packages.txt"
# }}}

# Go Lang {{{
export GO_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/go_urls.txt"
# }}}

# Pager {{{
# Set the manpager to less, instead of col (the default)
export MANPAGER="less -X"

# Less and Less termcap variables {{{
export LESS="--RAW-CONTROL-CHARS -i"

# Termcap
export LESS_TERMCAP_mb=$(
  tput bold
  tput setaf 1
) # red
export LESS_TERMCAP_md=$(
  tput bold
  tput setaf 4
) # blue
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(
  tput bold
  tput setaf 0
  tput setab 3
) # black on yellow
export LESS_TERMCAP_se=$(
  tput rmso
  tput sgr0
)
export LESS_TERMCAP_us=$(
  tput smul
  tput bold
  tput setaf 2
) # green
export LESS_TERMCAP_ue=$(
  tput rmul
  tput sgr0
)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)
export GROFF_NO_SGR=1 # For Konsole and GNOME-Terminal
# }}}
# }}}

# PostgreSQL {{{
# System-dependent. You will need to change this depending on your platform and Postgres version!
export LD_LIBRARY_PATH="/usr/lib/postgresql/10/lib"
# }}}

# Python {{{
export PYTHON2_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/python2_user_packages.txt"
export PYTHON3_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/python3_user_packages.txt"
# }}}

# Perl {{{
export PERL_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/perl_packages.txt"
# CPAN configuration
PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"
export PATH
PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL5LIB
PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_LOCAL_LIB_ROOT
PERL_MB_OPT="--install_base \"${HOME}/perl5\""
export PERL_MB_OPT
PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"
export PERL_MM_OPT
# Silence prompts for ExitUtils::MakeMaker,
# opting to use the default response every time.
# This helps make the CPAN install process much more automatic.
# May need to set this to 0 if you find yourself in an infinite loop.
export PERL_MM_USE_DEFAULT=1
# }}}

# Lua {{{
export LUA_PACKAGES_FILE="$DOTFILES_PACKAGES_DIR/luarocks_packages.txt"
# }}}

# Terminal {{{
# Figure out which terminal program to use by default based on what is installed.
TERMINAL="$(command -v xterm)"
if [ "$(command -v "termite")" != "" ]; then
  TERMINAL="$(command -v "termite")"
elif [ "$(command -v "urxvt")" != "" ]; then
  TERMINAL="$(command -v "urxvt")"
elif [ "$(command -v "terminator")" != "" ]; then
  TERMINAL="$(command -v "terminator")"
else
  TERMINAL="$(command -v "xterm")"
fi
export TERMINAL
# }}}

# Display {{{
# X Environment Variables
export DISPLAY=":0.0"
# }}}

# FZF {{{
# Set default behavior for FZF on the command line
export FZF_DEFAULT_OPTS="--multi --cycle --border --inline-info --tabstop=4"

# Override the default find command to make FZF faster (if available)
if [ "$(command -v rg)" != "" ]; then
  # Best case scenario: use ripgrep (fastest search tool)
  export FZF_DEFAULT_COMMAND="rg --hidden --files --glob ''"
elif [ "$(command -v ag)" != "" ]; then
  # Use ag if it is found and ripgrep is unavailable
  export FZF_DEFAULT_COMMAND="ag --path-to-ignore ~/.agignore --hidden -g ''"
fi
# }}}

# ShellCheck {{{
export SHELLCHECK_OPTS="--external-sources"
# b}}}

# Mutt {{{
export MUTT_HOME="${HOME}/.config"
export MUTT_ATTACHMENTS_DIR="${MUTT_HOME}/attachments"
# }}}

# Emacs {{{
export EMACS_CONFIG_HOME="${HOME}/.emacs.d"
# }}}

# Projects {{{
export CURRENT_PROJECTS_FILE="${DOTFILES_PROJECTS_DIR}/current_projects.txt"
# }}}

# Icons {{{
export USER_ICON_DIR="${HOME}/.local/share/icons"
# }}}

# Additional variables will be added automatically to this location during
# installation based on which operating system we're using.
#<additional-vars-insert>

# vim:foldmethod=marker:
