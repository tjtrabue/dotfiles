#!/usr/bin/env bash

set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Variables {{{
declare DOTFILES_REPO="${HOME}/.dotfiles"
declare WS
# }}}

# Imports {{{
. "${DOTFILES_REPO}/shell/common/source/common.sh" && src
# }}}

# Functions {{{
_help() {
  command cat <<EOF
${THIS_EXEC}

Install the Emacs from its master branch.

USAGE:
  ${THIS_EXEC} [OPTIONS]

OPTIONS:
  -h | --help
    Print the help message (this message) and exit.
EOF
}

set_global_vars() {
  log_info "Settings global variables"
  WS="${WS:-${HOME}/workspace}"
}

make_dirs() {
  log_info "Creating necessary directories"
  mkdir -p "${WS}"
}

setup() {
  set_global_vars
  make_dirs
}

remove_old_emacs_installation() {
  local emacsDir="${1}"

  if [ -d "${emacsDir}" ]; then
    log_info "Removing old Emacs installation at: ${BLUE}${emacsDir}${NC}"
    (
      cd "${emacsDir}" && \
      sudo make uninstall
    )
  fi
}

# Install emacs from source
install_emacs_source() {
  local emacsGitUrl="https://github.com/emacs-mirror/emacs.git"
  local emacsDest="${WS}/emacs"
  local configureCmd="./configure --with-json --with-tree-sitter \
      --with-xwidgets --with-imagemagick --with-mailutils \
      --with-native-compilation=aot"

  if ! pgrep "tty.*Xorg" >>/dev/null 2>&1; then
    # If we are not running an X server, use the Pure GTK version of Emacs.
    # Note, PGTK does not work with X, but seems to work great for Weyland.
    configureCmd="${configureCmd} --with-pgtk"
  fi

  if [ -d "${emacsDest}" ]; then
    remove_old_emacs_installation "${emacsDest}"
  fi

  log_info "Cloning/Updating Emacs Git Repo"
  clone_or_update_git_repo "${emacsGitUrl}" "${emacsDest}"
  (
    log_info "Installing latest Emacs" && \
    cd "${emacsDest}" && \
    export CC="gcc" CXX="g++" && \
    ./autogen.sh && \
    ./configure --with-json \
      --without-compress-install \
      --with-tree-sitter \
      --with-xwidgets \
      --with-imagemagick \
      --with-mailutils \
      --with-native-compilation=aot \
      --with-pgt && \
    make -j"$(nproc)" && \
    sudo make install
  )
}

main() {
  print_header "Installing Emacs (the best editor!)"
  setup
  install_emacs_source
}
# }}}

# Parse CLI Options {{{
args=$(getopt -o h --long help -n 'install_emacs' -- "$@")
eval set -- "$args"

# extract options and their arguments into variables.
while true; do
  case "$1" in
  -h | --help)
    _help
    exit 0
    ;;

  --)
    shift
    break
    ;;

  *)
    err "Unknown option $1 to ${THIS_EXEC}"
    exit 2
    ;;
  esac
done
# }}}

main "${@}"

# vim:foldenable:foldmethod=marker: