#+title:  The Flycheck Syntax Checker
#+author: Tom Trabue
#+email:  tom.trabue@gmail.com
#+date:   2020:05:25
#+STARTUP: fold

=flycheck= is a phenomenal general-purpose syntax checker based on a number of
plugins.  =flycheck= comes pre-packaged with a huge number of language syntax
plugins, so it will probably work for you without any extra
configuration. However, should you need to install a few new =flycheck= plugins
it is very simple to do.

* flycheck
  *NOTE ABOUT FLYSPELL:* =flyspell-mode= requires you to have an
  ispell-compatible spell-checking binary installed, such as =hunspell=.
  Furthermore, =hunspell= requires you to have dictionaries installed in
  predictable locations. Run =hunspell -D= to view the path =hunspell= uses to
  find dictionaries, which is different depending on your operating system.

#+begin_src emacs-lisp
  (use-package flycheck
    :hook
    ((prog-mode . (lambda ()
       ;; Enable flycheck mode by default when editing any programming language
       ;; file.
       (flycheck-mode)
       ;; Turn on the flyspell spell-checker for comments and strings.
       (flyspell-prog-mode)))
     ;; Check spelling in text documents as you type.
     (text-mode . flyspell-mode))
    :init
    ;; The allotted time before displaying errors at point.
    (setq flycheck-display-errors-delay 0.1))
#+end_src

* Plugins
** flycheck-cask
#+begin_src emacs-lisp
(use-package flycheck-cask
  :after (flycheck))
#+end_src

** flycheck-clojure

#+begin_src emacs-lisp
(use-package flycheck-clojure
  :after flycheck)
#+end_src

** flycheck-haskell
#+begin_src emacs-lisp
(use-package flycheck-haskell
  :after flycheck)
#+end_src

** flycheck-inline
   Shows Flycheck output inline right beneath their reporting location.  This is
   an alternative to =flycheck-pos-tip=. I tend to like =flycheck-pos-tip=
   better, though.

#+begin_src emacs-lisp
  ;; (use-package flycheck-inline
  ;;   :after (flycheck quick-peek)
  ;;   :hook
  ;;   (flycheck-mode . flycheck-inline-mode))
#+end_src

** flycheck-package
   Check Emacs Lisp packages for common errors.

#+begin_src emacs-lisp
  (use-package flycheck-package
    :after flycheck
    :config
    (flycheck-package-setup))
#+end_src

** flycheck-pkg-config
   Allows Flycheck to use =pkg-config= when determining C/C++ library headers.

#+begin_src emacs-lisp
  (use-package flycheck-pkg-config
    :after flycheck)
#+end_src

** flycheck-pos-tip
   Shows the error at point in a =pos-tip= graphical popup.

#+begin_src emacs-lisp
  (use-package flycheck-pos-tip
    :after flycheck
    :hook
    (flycheck-mode . (lambda ()
     ;; Put errors in tooltips if we're not in lsp-mode, since lsp-mode
     ;; does its own thing and doing so would cause duplication.
     (if (not (bound-and-true-p lsp-mode))
      (flycheck-pos-tip-mode 1)))))
#+end_src

** flycheck-relint
   Checks regular expression syntax.

#+begin_src emacs-lisp
(use-package flycheck-relint
  :after flycheck
  :config
  (flycheck-relint-setup))
#+end_src

** flycheck-rust

#+begin_src emacs-lisp
(use-package flycheck-rust
  :after flycheck)
#+end_src

** flycheck-status-emoji
   Replaces standard Flycheck indicators with expressive emojis.

#+begin_src emacs-lisp
  (use-package flycheck-status-emoji
    :after flycheck
    :hook
    (flycheck-mode . flycheck-status-emoji-mode))
#+end_src
