#+title: The Hydra Keyboard Macro System
#+author: Tom Trabue
#+email:  tom.trabue@gmail.com
#+date:   2020:5:25
#+STARTUP: fold

This file contains Plugins and configuration for the hydra hotkey macro package.

=hydra= is a system for defining a hotkey as a "gateway" to a group of related
hotkey commands. For instance, =C-*= could be mapped to the hydra for zooming
the current window in and out with the =j= and =k= keys. In fact, such a hydra
is defined within this file! To get rid of (or slay) the hydra, all you have to
do is hit any other key not defined within the current hydra.  After you do
that, the hydra disappears, and the key that you just hit to slay the hydra
performs its normal function. Thus, if you were zooming in and out with the =j=
and =k= keys after hitting =C-*= and you hit =p= to slay the hydra, then
assuming you are using =evil-mode=, the hydra would disappear and the contents
of the selected paste register would be pasted at point.

* Hydras
  This is where we define our hydras for use in various modes.

** hydra-zoom
   This is a simple, nearly trivial hydra used as an example and starting point
   for creating more complex specimens. All that =hydra-zoom= accomplishes is
   defining a zoom in/out hydra for the global keymap.

   #+begin_src emacs-lisp
     (defun my/define-hydra-zoom ()
       "Wrapper function for defhydra hydra-zoom"

       (defhydra hydra-zoom (global-map "C-*")
         "Zoom in/out in the current window:"
         ("k" text-scale-increase "in")
         ("j" text-scale-decrease "out")))
   #+end_src

** hydra-resize-window
   This hydra resizes the current window using VI keys.

   #+begin_src emacs-lisp
     (defun my/define-hydra-resize-window ()
       "Wrapper function for defhydra hydra-resize-window."
       (defhydra hydra-resize-window (evil-normal-state-map "C-]")
         "Resize window with VI keys"
         ("h" shrink-window-horizontally "shrink horizontally")
         ("j" shrink-window "shrink vertically")
         ("k" enlarge-window "enlarge vertically")
         ("l" enlarge-window-horizontally "enlarge horizontally")))
   #+end_src

** hydra-expand-region
   This hydra expands and contracts the active region by semantic units using
   the =expand-region= plugin.

   #+begin_src emacs-lisp
     (defun my/define-hydra-expand-region ()
       "Wrapper function for defhydra hydra-expand-region."
       (defhydra hydra-expand-region (evil-normal-state-map "C-=")
         "Expand/contract visual region."
         ("=" er/expand-region "Expand region")
         ("-" er/contract-region "Contract region")))
   #+end_src

* Activate hydras
  #+begin_src emacs-lisp
    (defun my/define-hydras ()
      "Load custom hydra definitions."
      (interactive)
      (my/define-hydra-zoom)
      (my/define-hydra-resize-window)
      (my/define-hydra-expand-region))
  #+end_src

* =use-package= specification
  #+begin_src emacs-lisp
    (use-package hydra
      :after evil-collection
      :hook
      (after-init . my/define-hydras))
  #+end_src
