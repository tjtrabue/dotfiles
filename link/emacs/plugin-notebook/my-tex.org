#+TITLE:  LaTeX Configuration/Plugins
#+AUTHOR: Tom Trabue
#+EMAIL:  tom.trabue@gmail.com
#+DATE:   2020-05-26
#+STARTUP: fold

=LaTeX= plugins and configuration for Emacs.

* How to get a LaTeX live-preview in Emacs
Oh, Emacs. How you irk me so. You're so powerful, but so dumb. Vim has had
amazing LaTeX live-preview plugins for over a decade, but Emacs has never had an
even semi-decent counterpart. But! We are Lisp hackers, and we always, always
find a way to do what we want, regardless of how stupid the solution is.

To get a live-preview in Emacs, do this:

- Open your =.tex= file in Emacs,
- Make sure you've compiled the file at least once using AUCTeX,
- In a terminal window, navigate to the directory containing the =.tex= file and
  run the following command: =latexmk -pvc -pdf <file name>=. This command
  re-compiles the output PDF whenever you make changes to the source =.tex= file,
  - Alternatively, in your =.tex= buffer, run =M-x compile= and use the above
    command as your =compile-command=.
- Now, open the compiled =.pdf= document in a viewing program capable of
  reloading on-the-fly:
  - *Option 1:* Open the PDF in an Emacs buffer (if you have =pdftools= installed)
  - *Option 2:* Open the PDF in an external viewer, such Evince or Zathura, by
    pressing =C-c C-c= and selecting =View=,
    - You can change the default PDF viewing program AUCTeX uses by setting
      =output-pdf= to your favorite viewer in =TeX-view-program-selection=:
      #+begin_src emacs-lisp :tangle no
        (push (list 'output-pdf "Zathura")
              TeX-view-program-selection)
      #+end_src
- In your =.tex= file, make a change, save the file, and watch your PDF viewer
  update in real time!

Voila! You now have an almost-instant preview of your TEX document.

* TeX
The built-in major mode for editing TeX documents.

#+begin_src emacs-lisp
  (use-package tex
    :ensure nil
    :straight nil
    :config
    (add-to-list 'TeX-command-list '("Latex Make" "latexmk %(-pdf) %t" TeX-run-TeX) ()))
#+end_src

* Plugins
** AUCTeX
AUCTeX is the quintessential LaTeX mode for Emacs, and one the premier LaTeX
integration systems of all time. Its features are too numerous to mention here,
but I highly recommend you peruse the online documentation, and maybe work
through a tutorial or two.

#+begin_src emacs-lisp
  (use-package auctex
    :defines (latex-help-cmd-alist latex-help-file)
    :mode ("\\.tex\\'" . TeX-latex-mode)
    :hook
    (LaTeX-mode . (lambda ()
                    (let ((file-name (file-name-nondirectory buffer-file-name)))
                      (visual-line-mode 1)
                      (flyspell-mode 1)
                      (reftex-mode 1)
                      ;; Make the standard compile command compile the TeX file
                      ;; into a PDF.
                      (setq-local compile-command
                                  (concat "latexmk -pvc -pdf " file-name)))))
    :init
    (setq TeX-auto-save t
          TeX-parse-self t
          ;; Compile to PDF by default
          TeX-PDF-mode t
          ;; Do not ask for permission before saving TeX files when compiling
          TeX-save-query nil
          TeX-show-compilation nil
          TeX-file-extensions '("Rnw"
                                "rnw"
                                "Snw"
                                "snw"
                                "tex"
                                "sty"
                                "cls"
                                "ltx"
                                "texi"
                                "texinfo"
                                "dtx"))
    ;; Allow AUCTeX to work with multiple files like a project
    (setq-default TeX-master nil
                  ;; Use the XeTeX engine by default, which assumes Unicode and
                  ;; works better out of the box.
                  TeX-engine 'xetex)
    ;; Expand the `"' character into csquotes macros.  This requires that the
    ;; `babel' package be loaded after the `csquotes' package.
    (setq LaTeX-csquotes-open-quote "\\enquote{"
          LaTeX-csquotes-close-quote "}")
    (setq reftex-plug-into-AUCTeX '(t t t t t))
    ;; Revert pdf-view after compilation
    (add-hook 'TeX-after-compilation-finished-functions
              #'TeX-revert-document-buffer)
    :config
    ;; Use `pdf-tools' to view PDFs so we can stay in Emacs.
    (push '(output-pdf "PDF Tools") TeX-view-program-selection)
    (add-to-list 'TeX-command-list '("Latex Make" "latexmk %(-pdf) %t" TeX-run-TeX)))
#+end_src

** CDLaTeX
CDLaTeX is a minor mode supporting fast insertion of environment templates and
math stuff in LaTeX.

#+begin_src emacs-lisp
  (use-package cdlatex
    :hook
    ;; Turn on cdlatex for all LaTeX editing major modes.
    ;; AUCTeX
    ((LaTeX-mode . (lambda ()
                     (turn-on-cdlatex)))
     ;; Built-in LaTeX mode
     (latex-mode . (lambda ()
                     (turn-on-cdlatex)))))
#+end_src

** auctex-lua

#+begin_src emacs-lisp
  (use-package auctex-lua)
#+end_src

** auctex-latexmk

#+begin_src emacs-lisp
  (use-package auctex-latexmk)
#+end_src

** latex-preview-pane
Create a split pane with an updatable LateX preview. Not performant, so I don't
use this plugin often.

#+begin_src emacs-lisp
  (use-package latex-preview-pane
    ;; Not necessary, and apparently unmaintained.
    :disabled)
#+end_src

** math-preview
Preview LaTeX math equations inline.

*** =math-preview= NPM package installation
This plugin requires the external =math-preview= Node.js package in order to
function. Install it with the following command:

#+begin_src sh :tangle no
  npm install -g git+https://gitlab.com/matsievskiysv/math-preview
#+end_src

*** =use-package= specification

#+begin_src emacs-lisp
  (use-package math-preview)
#+end_src
