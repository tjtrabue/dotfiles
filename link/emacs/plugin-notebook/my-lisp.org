#+title:   Generic Lisp Configuration
#+author:   Tom Trabue
#+email:    tom.trabue@gmail.com
#+date:     2021:07:05
#+property: header-args:emacs-lisp :lexical t
#+tags:
#+STARTUP: fold

This file contains configuration and plugins for editing generic LISP code
regardless of its particular dialect.

#+begin_src emacs-lisp :tangle yes
  ;; -*- lexical-binding: t; -*-

#+end_src

* lispy
  =lispy= is a great plugin for editing LISP files in a VI-oriented
  manner. There is also the fantastic =lispyville= plugin for integrating
  =lispy= with =evil-mode=. See the =my-evil.org= file for its configuration.

  #+begin_src emacs-lisp :tangle yes
    (use-package lispy
      :hook
      ;; Load lispyj-mode for any LISP derived major mode.
      ((lisp-mode emacs-lisp-mode) . lispy-mode))
  #+end_src

* parinfer-rust-mode
  =parinfer= is an incredible system written in Rust designed to make
  programming in any Lisp dialect a joy. It automatically handles indentation
  and parentheses for you, effectively replacing and improving upon plugins such
  as =aggressive-indent= and =smartparens=.

  #+begin_src emacs-lisp :tangle yes
    (use-package parinfer-rust-mode
      :hook
      ((clojure-mode
        emacs-lisp-mode
        lisp-mode)
       . parinfer-rust-mode)
      :custom
      ;; Controls how parinfer behaves. Can be one of "paren", "indent", or
      ;; "smart".
      ;; Automatically balance delimiters but try to preserve structure as well.
      (parinfer-rust-preferred-mode "smart")
      ;; Never prompt user for permission before adjusting indentation.
      (parinfer-rust-check-before-enable nil)
      ;; Automatically download latest parinfer-rust library.
      (parinfer-rust-auto-download t))
  #+end_src
