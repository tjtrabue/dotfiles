#+TITLE:   Combobulate: Structural Navigation/Editing
#+AUTHOR:  Thomas Trabue
#+EMAIL:   tom.trabue@gmail.com
#+DATE:    2024-01-18
#+TAGS:    combobulate structural navigation editing tree sitter tree-sitter
#+STARTUP: fold

=combobulate= is a package that adds structured editing and movement to a wide
range of programming languages. Unlike most programming major modes that use
error-prone imperative code and regular expressions to determine what's what in
your code, Combobulate uses Emacs 29's =tree-sitter= library. Tree-sitter
maintains a /concrete syntax tree/ of your code, providing =combobulate=
absolute clarity of all aspects of your code, enabling more correct movement and
editing than you would otherwise have.

* Functions
#+begin_src emacs-lisp
  (defun my/combob-evil-kill-node-and-insert (&optional arg)
    "Kill ARG nodes at point and enter Evil insert state."
    (interactive "p")
    (combobulate-kill-node-dwim arg)
    (evil-insert arg))
#+end_src

* =use-package= specification
#+begin_src emacs-lisp
  (use-package combobulate
    ;; Only use combobulate if we have a tree-sitter enabled Emacs.
    :if (and (fboundp 'treesit-available-p)
             (treesit-available-p))
    :hook
    ((css-ts-mode        . combobulate-mode)
     (go-ts-mode         . combobulate-mode)
     (html-ts-mode       . combobulate-mode)
     (json-ts-mode       . combobulate-mode)
     (js-ts-mode         . combobulate-mode)
     (mhtml-mode         . combobulate-mode)
     (python-ts-mode     . combobulate-mode)
     (sgml-mode          . combobulate-mode)
     (tsx-ts-mode        . combobulate-mode)
     (typescript-ts-mode . combobulate-mode)
     (yaml-ts-mode       . combobulate-mode))
    :general
    (general-def 'normal combobulate-key-map
      [remap evil-delete-line]         'combobulate-kill-node-dwim
      [remap evil-change-line]         'my/combob-evil-kill-node-and-insert
      [remap evil-forward-WORD-begin]  'forward-sexp
      [remap evil-backward-WORD-begin] 'backward-sexp
      "-" 'combobulate-yoink-forward
      "_" 'combobulate-yeet-forward)
    (general-def '(normal visual) combobulate-key-map
      "C-y" 'combobulate-clone-node-dwim
      "M-j" 'combobulate-drag-down
      "M-k" 'combobulate-drag-up)
    (my/user-leader-def combobulate-key-map
      "v" 'combobulate-highlight-dwim-at-point)
    (my/evil-leader-def combobulate-key-map
      "ld" 'combobulate-kill-node-dwim
      "lh" 'combobulate-highlight-dwim-at-point
      "lt" 'combobulate-transpose-sexps
      "lT" 'combobulate-transpose-sexps-1)
    :init
    (setq combobulate-key-prefix "C-c o"))
#+end_src
