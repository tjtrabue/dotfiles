#+TITLE:   Ctags, readtags, and other tags plugins
#+AUTHOR:  Thomas Trabue
#+EMAIL:   tom.trabue@gmail.com
#+DATE:    2022-11-14
#+TAGS:    ctags readtags universal
#+STARTUP: fold

Ctags are a universal mechanism for storing semantic information about a
codebase's source code files in a database file called a Ctags file. Ctags
provide variable and function references, autocompletion, go-to-definition, and
many other features in a language-agnostic manner.

* Citre
Citre is an advanced Emacs front-end for readtags.

** Usage
Open a file in your project, and run =M-x citre-update-this-tage-file=. If Citre
can't find a tags file for your project, it will guide you through creating one.
For instance, the following command creates a good tags file for this =dotfiles=
repository: =M-x citre-update-this-tags-file RET 3 RET
Sh,Zsh,Lua,EmacsLisp,Org,Markdown RET=

To update the tags file later, run the same command again: =M-x
citre-update-this-tags-file=. Subsequent runs will not prompt you for
configuration. To change the recipe you used to generate the tags file, execute
=M-x citre-edit-tags-file-recipe=.

** =use-package= specification
#+begin_src emacs-lisp
  (use-package citre
    :demand t
    :commands
    (citre-jump citre-jump-back citre-peek citre-update-this-tags-file)
    :general
    (my/evil-leader-def
      "zb" 'citre-jump-back
      "zc" 'citre-create-tags-file
      "zj" 'citre-jump
      "zp" 'citre-peek
      "zu" 'citre-update-this-tags-file)
    :custom
    (citre-use-project-root-when-creating-tags t)
    ;; Prompt for CTags languages instead of asking the user to edit the command
    ;; line.
    (citre-prompt-language-for-ctags-command t)
    ;; Set this if you use project management plugin like projectile.  It's
    ;; used for things like displaying paths relatively, see its docstring.
    (citre-project-root-function #'projectile-project-root)
    :config
    (require 'citre-config))
#+end_src
