#+TITLE:    TRAMP: Interact with Remote Resources
#+AUTHOR:   Tom Trabue
#+EMAIL:    tom.trabue@gmail.com
#+DATE:     2021-07-13
#+TAGS:
#+STARTUP: fold

TRAMP is Emacs' built-in system for interacting with non-local or unusual
resources, such as files located on remote servers, modifying local files as
root, or even Docker containers.

From the Emacs manual:

#+BEGIN_QUOTE
TRAMP extends the Emacs file name syntax by a remote component. A remote file
name looks always like =/method:user@host:/path/to/file=.

You can use remote files exactly like ordinary files, that means you could open
a file or directory by =C-x C-f /method:user@host:/path/to/file RET=, edit the
file, and save it. You can also mix local files and remote files in file
operations with two arguments, like =copy-file= or =rename-file=. And finally,
you can run even processes on a remote host, when the buffer you call the
process from has a remote =default-directory=.
#+END_QUOTE

* Usage Notes from the Emacs Manual
** =ssh= and =plink=
   If your local host runs an SSH client, and the remote host runs an SSH
   server, the simplest remote file name is =/ssh:user@host:/path/to/file=. The
   remote file name =/ssh::= opens a remote connection to yourself on the local
   host, and is taken often for testing TRAMP.

   On MS Windows, PuTTY is often used as SSH client. Its =plink= method can be
   used there to open a connection to a remote host running an ssh server:
   =/plink:user@host:/path/to/file=.

** =su=, =sudo=, and =sg=
   Sometimes, it is necessary to work on your local host under different
   permissions. For this, you could use the =su= or =sudo= connection
   method. Both methods use ‘root’ as default user name and the return value of
   =(system-name)= as default host name. Therefore, it is convenient to open a
   file as =/sudo::/path/to/file=.

   The method =sg= stands for “switch group”; the changed group must be used
   here as user name. The default host name is the same.
** Combining =ssh= or =plink= with =su= or =sudo=
   If the =su= or =sudo= option shall be performed on another host, it could be
   combined with a leading =ssh= or =plink= option. That means, TRAMP connects
   first to the other host with non-administrative credentials, and changes to
   administrative credentials on that host afterwards. In a simple case, the
   syntax looks like =/ssh:user@host|sudo::/path/to/file=.
** =sudoedit=
   The =sudoedit= method is similar to the =sudo= method. However, it is a
   different implementation: it does not keep an open session running in the
   background. This is for security reasons; on the backside this method is less
   performant than the sudo method, it is restricted to the ‘localhost’ only,
   and it does not support external processes.
** =smbclient=
   In order to access a remote MS Windows host or Samba server, the =smbclient=
   client is used. The remote file name syntax is
   =/smb:user%domain@host:/path/to/file=. The first part of the local file name
   is the share exported by the remote host, ‘path’ in this example.

* Troubleshooting TRAMP
** TRAMP is too slow!
   If TRAMP is super slow for you, make sure to set your PS1 prompt variable to
   something very, very simple. TRAMP parses your shell's prompt to determine
   whether or not a command has finished, so the simpler the better. A good
   example would be placing the following in your =.bashrc= files, both on your
   remote server and your local development machine:

   #+begin_src shell
     if [ $TERM == "dumb" ]; then
         PS1="tramp $ "
     fi
   #+end_src

* =use-package= specification
  #+begin_src emacs-lisp
    (use-package tramp
      ;; Use built-in Tramp.
      :ensure nil
      :straight nil
      :custom
      ;; Cache sudo password for the day.
      (password-cache t)
      (password-cache-expiry (* 8 3600)))
  #+end_src

* Plugins
** tramp-container
   This is an integrated package that offers the TRAMP method =docker= for
   interacting with running Docker containers.

   Use =C-x C-f /docker:user@container:/path/to/file=, where =user= is the user
   you want to use inside of the container (optional), and =container= is the
   name of the container you want to access.

   For example, if you want to access a Docker container as the root user:
   =/sudo:root@localhost|docker:user@container:/path/to/file=

   #+begin_src emacs-lisp
     (use-package tramp-container
       :ensure nil
       :straight nil)
   #+end_src

** vagrant-tramp
   =vagrant-tramp= adds an Emacs TRAMP method for Vagrant boxes. As far as
   Vagrant is concerned, the TRAMP =vagrant= method behaves like the built-in
   =vagrant ssh= command. The =vagrant-tramp= method simply provides
   auto-completion and a wrapper around =vagrant ssh= for connecting to boxes.

   #+begin_src emacs-lisp
     (use-package vagrant-tramp)
   #+end_src
