#+title:  Editorconfig for Emacs
#+author: Tom Trabue
#+email:  tom.trabue@gmail.com
#+date:   2020:05:25
#+STARTUP: fold

=editorconfig= is a simple specification for telling editors how to perform
basic operations on different file types, such as indenting with spaces rather
than tabs in all files except for Makefiles, or automatically wrapping text
after a certain number of columns have been typed.

Needed for performance:
#+begin_src emacs-lisp :tangle yes
;; -*- lexical-binding: t; -*-

#+end_src

* Variables
#+begin_src emacs-lisp :tangle yes
  (defvar my/modes-to-format-with-editorconfig '(
      ;; sh-mode
  )
  "Major modes to automatically format with `editorconfig-format-buffer'
before saving. Formatting with editorconfig's utilities is only recommended
if no 'smarter' code formatting tool exists for your programming language.")
#+end_src

* Functions
#+begin_src emacs-lisp :tangle yes
  (defun my/add-editorconfig-format-hook ()
    "Add a single before-save-hook for formatting a buffer with editorconfig
before saving."
    (add-hook 'before-save-hook #'editorconfig-format-buffer 0 'local))

  (defun my/add-editorconfig-format-hooks ()
    "Add hooks to major modes listed in `my/modes-to-format-with-editorconfig'
so that each time they are saved they are formatted"
    (mapc (lambda (mode)
          (let ((hook-name (concat (symbol-name mode) "-hook")))
            (add-hook (intern hook-name) #'my/add-editorconfig-format-hook)))
      my/modes-to-format-with-editorconfig))

  (defun my/add-editorconfig-hooks ()
    "Add hooks for `editorconfig-mode'."
    (my/add-editorconfig-format-hooks))
#+end_src

* editorconfig
#+begin_src emacs-lisp :tangle yes
  (use-package editorconfig
    :demand t
    :init
    (my/add-editorconfig-hooks)
    :config
    (editorconfig-mode))
#+end_src
