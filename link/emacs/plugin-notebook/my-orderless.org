#+title:    Orderless: Smart Completion Backend
#+author:   Tom Trabue
#+email:    tom.trabue@gmail.com
#+date:     2021:01:21
#+property: header-args:emacs-lisp :lexical t
#+tags:
#+STARTUP: fold

=orderless= provides an orderless completion style that divides the pattern into
space-separated components, and matches candidates that match all of the
components in any order. Each component can match in any one of several ways:
literally, as a regexp, as an initialism, in the flex style, or as multiple word
prefixes. By default, regexp and literal matches are enabled.

#+begin_src emacs-lisp
  (use-package orderless
    ;; Currently disabled in favor of prescient becasue orderless is quite slow.
    :disabled
    :demand t
    :init
    (icomplete-mode 1)
    :custom
    (completion-styles '(orderless))
    (completion-category-defaults nil)
    (completion-category-overrides '((file (styles partial-completion)))))
#+end_src
