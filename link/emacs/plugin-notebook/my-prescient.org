#+TITLE:    Prescient: Sort and Filter Intelligently
#+AUTHOR:   Tom Trabue
#+EMAIL:    tom.trabue@gmail.com
#+DATE:     2021-01-21
#+TAGS:
#+STARTUP: fold

=prescient.el= provides more intelligent sorting and filtering functions for
Emacs. It was designed to be used with existing completion frameworks, such as
Helm, Ivy, Selectrum, and others.

* Prescient vs. Orderless
=prescient.el= is primarily an alternative to =orderless=, but they can be used
in conjunction under restricted circumstances. For instance, you can use
=orderless= for filtering, and restrict =prescient= to sorting only. The main
difference between the two completion tools is that =orderless= is designed to
be more generic and does not provide any sorting capabilities of its own,
deferring that task to the underlying completion framework (such as Ivy, IDO,
Helm, Selectrum, etc.). =prescient=, on the other hand, is less generic in that
specific integration plugins must be deployed in order to marry =prescient= to
the completion UI, and it is not fully compatible with Emacs' native completion
system. However, =prescient= is much faster than =orderless=, and provides
built-in sorting capabilities which can be very handy if your completion UI does
not sort matches.

* =use-package= specification
#+begin_src emacs-lisp
  (use-package prescient
    :demand t
    :custom
    ;; Whether to put full matches before partial matches.
    (prescient-sort-full-matches-first t)
    ;; Whether to perform down-casing on filter arguments
    (prescient-use-case-folding 'smart)
    ;; List of filtering methods prescient uses on space-separated arguments
    ;; (prescient-filter-method '(literal regexp initialism fuzzy))
    :config
    (prescient-persist-mode 1))
#+end_src
