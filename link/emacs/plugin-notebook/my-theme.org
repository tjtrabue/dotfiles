#+TITLE:  Emacs Color Theme
#+AUTHOR: Tom Trabue
#+EMAIL:  tom.trabue@gmail.com
#+DATE:   2020-05-26
#+TAGS:   color colors theme
#+STARTUP: fold

This is where we set Emacs' primary color theme.

*WARNING:* Do NOT set themes via the 'M-x load-theme' command or through
customize! Those systems will add a ton of 'safety' checks to ~/.emacs and mess
up our nice, easy method of loading themes from right here in this file. If you
do, you'll need to go through the custom-set-variables section and delete the
theme code added by customize.

* Variables
#+begin_src emacs-lisp
  (defvar my/theme-after-load-hook nil
    "Functions to run after the main theme activates.
  Please do not make this hook run as advice to `load-theme' because
  it will end up in an infinite loop due to the need to load the
  `org-beautify-theme' after the main theme. Thus, it will call `load-theme'
  automatically after it calls `load-theme' for all eternity.")
#+end_src

* Functions
#+begin_src emacs-lisp
  (defun my/activate-theme--doom ()
    "Activation/configuration function for doom theme."
    (load-theme 'doom-one t)
    ;; Flash the modeline when the Emacs bell rings.
    ;; (doom-themes-visual-bell-config)
    ;; Two treemacs icon themes: one that takes after Atom's themes, and
    ;; another more colorful theme.
    (doom-themes-treemacs-config)
    ;; Correct and improve some of org-mode's native fontification.
    (doom-themes-org-config))

  (defun my/activate-theme--modus ()
    "Activation/configuration function for modus theme."
    (load-theme 'modus-vivendi t))

  (defun my/activate-theme ()
    "Activate my favorite color theme.
  This function wraps the `load-theme' function and other theme activation
  functions to provide a single point of theme configuration."
    (my/activate-theme--modus))
#+end_src

* Add advice to theme activation function
We want to run our custom theme hooks automatically after the theme loads.

#+begin_src emacs-lisp
  (defadvice my/activate-theme (after run-my/theme-after-load-hook activate)
    "Run `my/theme-after-load-hook'."
    (run-hooks 'my/theme-after-load-hook))
#+end_src

* Add theme hooks
There are some appearance-based functions that can only run after the primary
theme has loaded, so we should put all such logic inside of an "after load"
hook.

#+begin_src emacs-lisp
  (add-hook 'my/theme-after-load-hook
            (lambda ()
              ;; It's important to load org-beautify-theme after the main theme
              ;; has loaded.
              (with-eval-after-load "org-beautify-theme"
                (if (not (custom-theme-enabled-p 'org-beautify-theme))
                    (load-theme 'org-beautify t)))))
#+end_src

* Theme Packages
These are some great themes from Emacs contributors. I marked the theme I
currently use by appending =(active)= to the end of its =org-mode= heading.

** modus-themes
Highly accessible color themes for Emacs. They conform to the standards of the
[[https://www.w3.org/WAI/standards-guidelines/wcag/][Web Content Accessibility Guidelines]]. They are far more lightweight than themes
in the =doom-themes= package.

#+begin_src emacs-lisp
  (use-package modus-themes
    :demand t
    :init
    (setq modus-themes-italic-constructs t
          modus-themes-bold-constructs t
          modus-themes-mixed-fonts t
          modus-themes-custom-auto-reload t
          modus-themes-disable-other-themes t
          modus-themes-prompts '(italic bold)
          modus-themes-completions
          '((matches . (extrabold))
            (selection . (semibold italic text-also)))
          modus-themes-org-blocks 'gray-background
          modus-themes-headings '((1 . (variable-pitch 1.5))
                                  (2 . (1.3))
                                  (agenda-date . (1.3))
                                  (agenda-structure . (variable-pitch light 1.8))
                                  (t . (1.1)))
          ;; Whether to allow UI components under the direct control of Emacs
          ;; (such as the mode line, header line, and tab line) to contain
          ;; variable-pitch fonts instead of just monospaced fonts.
          modus-themes-variable-pitch-ui t
          ;; Override colors for all Modus themes.
          modus-themes-common-palette-overrides
          '(;; Remove gray from active buttons in menus and amplify gray for
            ;; inactive buttons.
            (bg-button-active bg-main)
            (fg-button-active fg-main)
            (bg-button-inactive bg-inactive)
            (fg-button-inactive "gray50")
            ;; Make headings 1-8 more colorful.
            (fg-heading-1 blue-warmer)
            (fg-heading-2 yellow-cooler)
            (fg-heading-3 cyan-cooler)
            ;; Make Org Agenda more colorful.
            (date-common cyan)   ; default value (for timestamps and more)
            (date-deadline red-warmer)
            (date-event magenta-warmer)
            (date-holiday blue) ; for M-x calendar
            (date-now yellow-warmer)
            (date-scheduled magenta-cooler)
            (date-weekday cyan-cooler)
            (date-weekend blue-faint)
            ;; Make code blocks in prose buffers more colorful.
            (prose-block red-faint)
            (prose-code blue-cooler)
            (prose-macro yellow-warmer)
            (prose-metadata cyan)
            (prose-metadata-value green-warmer)
            (prose-verbatim red-warmer)
            ;; Make region respect underlying text colors and change the region's
            ;; background color.
            (bg-region bg-lavender)
            (fg-region unspecified)
            ;; Make mouse highlights subtly green.
            (bg-hover bg-green-subtle)
            ;; Make linter underlines more subtle.
            (underline-err red-faint)
            (underline-warning yellow-faint)
            (underline-note cyan-faint)
            ;; Color line numbers and highlight current line number with a
            ;; brighter color.
            (fg-line-number-inactive fg-main)
            (fg-line-number-active fg-main)
            (bg-line-number-inactive bg-inactive)
            (bg-line-number-active bg-cyan-intense)))
    :config
    (my/activate-theme))
#+end_src

** doom-themes
This is a /huge/ collection of Emacs themes contributed by the very gracious
creator of Doom Emacs and several others.

#+begin_src emacs-lisp
  (use-package doom-themes
    ;; Currently using `modus-themes'.
    :disabled
    :after all-the-icons
    :demand t
    :custom
    ;; Enable bold fonts
    (doom-themes-enable-bold t)
    ;; Enable italic fonts
    (doom-themes-enable-italic t)
    ;; A more colorful theme for Treemacs that leverages all-the-icons.
    (doom-themes-treemacs-theme "doom-colors")
    :config
    (my/activate-theme))
#+end_src

* theme-magic
This package applies your Emacs theme to the rest of Linux. It. Is. Awesome.

It also depends on =pywal=, so make sure that you have it installed on
your =PATH=. =pywal= is a Python package, so installing it is easy:

#+begin_src shell :tangle no
  python3 -m pip install --user --upgrade pywal
#+end_src

** =use-package= specification
#+begin_src emacs-lisp
  (use-package theme-magic
    ;; Not currently used.
    :disabled
    :config
    ;; This global minor mode automatically updates your Linux theme
    ;; whenever Emacs' theme changes.
    (theme-magic-export-theme-mode))
#+end_src
