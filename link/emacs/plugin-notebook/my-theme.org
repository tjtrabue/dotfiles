#+title:  Emacs Color Theme
#+author: Tom Trabue
#+email:  tom.trabue@gmail.com
#+date:   2020:05:26
#+tags:   color colors theme
#+STARTUP: fold

This is where we set Emacs' primary color theme.

*WARNING:* Do NOT set themes via the 'M-x load-theme' command or through
customize! Those systems will add a ton of 'safety' checks to ~/.emacs and mess
up our nice, easy method of loading themes from right here in this file. If you
do, you'll need to go through the custom-set-variables section and delete the
theme code added by customize.

* Variables
  #+begin_src emacs-lisp
    (defvar my/theme-after-load-hook nil
      "Functions to run after the main theme activates.
Please do not make this hook run as advice to `load-theme' because
it will end up in an infinite loop due to the need to load the
`org-beautify-theme' after the main theme. Thus, it will call `load-theme'
automatically after it calls `load-theme' for all eternity.")
  #+end_src

* Functions
  #+begin_src emacs-lisp
    (defun my/activate-theme--doom ()
      "Activation/configuration function for doom theme."
      (load-theme 'doom-vibrant t)
      ;; Flash the modeline when the Emacs bell rings.
      ;; (doom-themes-visual-bell-config)
      ;; Two treemacs icon themes: one that takes after Atom's themes, and
      ;; another more colorful theme.
      (doom-themes-treemacs-config)
      ;; Correct and improve some of org-mode's native fontification.
      (doom-themes-org-config))

    (defun my/activate-theme ()
      "Activate my favorite color theme.
This function wraps the `load-theme' function and other theme activation
functions to provide a single point of theme configuration."
      (my/activate-theme--doom))
  #+end_src

* Add advice to theme activation function
  We want to run our custom theme hooks automatically after the theme loads.

  #+begin_src emacs-lisp
    (defadvice my/activate-theme (after run-my/theme-after-load-hook activate)
      "Run `my/theme-after-load-hook'."
      (run-hooks 'my/theme-after-load-hook))
  #+end_src

* Add theme hooks
  There are some appearance-based functions that can only run after the primary
  theme has loaded, so we should put all such logic inside of an "after load"
  hook.

  #+begin_src emacs-lisp
    (add-hook 'my/theme-after-load-hook (lambda ()
                                          ;; It's important to load org-beautify-theme after the main theme has
                                          ;; loaded.
                                          (with-eval-after-load "org-beautify-theme"
                                            (if (not (custom-theme-enabled-p 'org-beautify-theme))
                                                (load-theme 'org-beautify t)))
                                          (with-eval-after-load "beacon"
                                            ;; Make beacon's color match the cursor's color in the current theme.
                                            (setq beacon-color (face-attribute 'cursor :background)))))
  #+end_src

* Theme Packages
  These are some great themes from Emacs contributors. I marked the theme I
  currently use by appending "(active)" to the end of its =org-mode= heading.

** doom-themes
   This is a /huge/ collection of Emacs themes contributed by the very gracious
   creator of Doom Emacs.

   #+begin_src emacs-lisp
     (use-package doom-themes
       :after all-the-icons
       :demand t
       :custom
       ;; Enable bold fonts
       (doom-themes-enable-bold t)
       ;; Enable italic fonts
       (doom-themes-enable-italic t)
       ;; A more colorful theme for Treemacs that leverages all-the-icons.
       (doom-themes-treemacs-theme "doom-colors")
       :config
       (my/activate-theme))
   #+end_src

* theme-magic
  This package applies your Emacs theme to the rest of Linux. It. Is. Awesome.

  It also depends on =pywal=, so make sure that you have it installed on
  your =PATH=. =pywal= is a Python package, so installing it is easy:

  #+begin_src shell
    python3 -m pip install --user --upgrade pywal
  #+end_src

** =use-package= specification
   #+begin_src emacs-lisp
     (use-package theme-magic
       :config
       ;; This global minor mode automatically updates your Linux theme
       ;; whenever Emacs' theme changes.
       (theme-magic-export-theme-mode))
   #+end_src
