#+title:  Org Mode Configuration (meta!)
#+author: Tom Trabue
#+email:  tom.trabue@gmail.com
#+date:   2020:05:26
#+STARTUP: fold

Org is one of Emacs' killer apps: a powerful ORGanizer and much more, Org
enables Emacs users to engage in literate programming, a method of software
development where source code is embedded into explanatory, notebook-like
textual documents and evaluated as needed, or all at once.

* use-package specification
  The ubiquitous =org-mode=.

  #+begin_src emacs-lisp
    (use-package org
      :mode ("\\.org\\'" . org-mode)
      :bind
      ;; These bindings should be available everywhere.  We'll want to use them
      ;; outside of org-mode.
      (("C-c o l" . org-store-link)
       ("C-c o a" . org-agenda))
      :custom
      (org-hide-leading-stars 1)
      ;; Only show headings when visiting a new Org file.
      (org-startup-folded 'fold)
      ;; Directory used by Org only in rare circumstances, such as when filing
      ;; away remember notes.
      (org-directory my/org-dir)
      ;; Pressing return while point is over a hyperlink will open the link in
      ;; the user's web browser.
      (org-return-follows-link t)
      ;; Record a timestamp when a TODO item is marked as done.
      (org-log-done 'time)
      ;; Set Org agenda files to a list of files and/or directories.
      (org-agenda-files `(,my/org-agenda-dir))
      :init
      ;; Make sure the Org notes directory is present.
      (make-directory my/org-dir t)
      ;; Also create the agenda directory.
      (make-directory my/org-agenda-dir t))
  #+end_src

* Plugins

** org-bullets
   Use fancy bullets in =org-mode=.

   #+begin_src emacs-lisp
     (use-package org-bullets
       :after org
       :hook
       (org-mode . (lambda () (org-bullets-mode 1))))
   #+end_src

** org-beautify-theme
   Remove colors from headings, and instead differentiate them by changing
   their font size.

   *NOTE:* This theme *MUST* be loaded *AFTER* your primary Emacs theme!
   Otherwise all of your =.org= files will look awful, with each heading
   surrounded by big ugly boxes. See file =my-theme.org= for this theme's
   activation.

   #+begin_src emacs-lisp
     (use-package org-beautify-theme
       :after org
       :demand t)
   #+end_src

** org-roam
   =org-roam= is an amazing plugin that integrates some of Roam's advanced note
   taking features into =org-mode=.

   #+begin_src emacs-lisp
     (use-package org-roam
       :after org
       :hook
       (after-init . org-roam-mode)
       :init
       ;; Acknowledge that we've upgraded from v1 to v2.
       (setq org-roam-v2-ack t)
       ;; Set the path to the org-roam directory and ensure that directory is
       ;; present before loading org-roam.
       (setq org-roam-directory
             (file-truename (concat user-emacs-directory "org-roam")))
       (make-directory org-roam-directory t)
       :bind
       (:map org-roam-mode-map
             (("C-c n l" . org-roam)
              ("C-c n f" . org-roam-find-file)
              ("C-c n g" . org-roam-graph))
             :map org-mode-map
             (("C-c n i" . org-roam-insert))
             (("C-c n I" . org-roam-insert-immediate))))
   #+end_src

** org-super-agenda
   Improved Org agenda that allows you to break your agenda items up into
   sections.

   #+begin_src emacs-lisp
     (use-package org-super-agenda
       :after org)
   #+end_src

** org-download
   Utility for moving downloaded images into Org buffers.

   #+begin_src emacs-lisp
     (use-package org-download
       :after org
       :hook
       ;; Enable org-download in dired-mode.
       (dired-mode . org-download-enable)
       :init
       (setq-default org-download-image-dir
                     (file-truename (concat (getenv "HOME") "/images/org")))
       :config
       (make-directory org-download-image-dir t))
   #+end_src

** ox-gfm
   This is a small exporter based on the Markdown exporter already existing in
   Org mode.

   #+begin_src emacs-lisp
     (use-package ox-gfm
       :after org
       :demand t
       :config
       (require 'ox-gfm nil t))
   #+end_src
