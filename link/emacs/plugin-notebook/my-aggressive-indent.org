#+title:    Automatically Keep Code Indented
#+author:   Tom Trabue
#+email:    tom.trabue@gmail.com
#+date:     2021:07:14
#+property: header-args:emacs-lisp :lexical t
#+tags:
#+STARTUP: fold

=aggressive-indent-mode= is an improved alternative to =electric-indent-mode=
that keeps your indentation consistent as you manipulate code blocks. Be warned:
It is aggressive, and as such will not allow you to violate it's consistency
guidelines as long as the mode is active. This can get annoying if you value
flexibility in code style over consistency.

* NOTE: =aggressive-indent-mode= and LSP
=aggressive-indent-mode= keeps your files indented by constantly making a series
of micro-edits to your files /as you type/. What else works by analyzing your
code as you type (i.e., as processes edit your files)? Yup, =lsp-mode=! This
means that each time =aggressive-indent-mode= makes a micro-adjustment to your
code, those changes go to any running LSP servers for analysis, which can lead
to a massive decrease in Emacs' performance. I recommend that you disable
=aggressive-indent-mode= anytime you start =lsp-mode= on a file.

* =use-package= specification
  #+begin_src emacs-lisp
    (use-package aggressive-indent
      ;; Disabled until PR #157 merges: https://github.com/Malabarba/aggressive-indent-mode/pull/157
      ;; Should be any day now!
      :disabled
      :hook
      ;; Probably don't want to enable aggressive-indent mode globally.  It's
      ;; helpful, but it doesn't always play nicely with automatic code
      ;; formatters. It's also far more useful in Lisp modes than it is for editing
      ;; ALGOL-derived languages.
      ((;; clojure-mode ; Agressive indent screws with clojure-lsp
        c-mode
        c++-mode
        elixir-mode
        emacs-lisp-mode
        haskell-mode
        ielm-mode
        java-mode
        lisp-mode
        lisp-data-mode
        lisp-interaction-mode
        objc-mode
        python-mode
        ruby-mode
        sly-mrepl-mode)
       . aggressive-indent-mode))
  #+end_src
