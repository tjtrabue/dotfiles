#+TITLE:   Sage Math Configuration/Plugins
#+AUTHOR:  Thomas Trabue
#+EMAIL:   tom.trabue@gmail.com
#+DATE:    2024-01-09
#+TAGS:    sage math python
#+STARTUP: fold

From the [[https://www.sagemath.org/index.html][website]]:

#+begin_quote
SageMath is a free open-source mathematics software system licensed under the
GPL. It builds on top of many existing open-source packages: NumPy, SciPy,
matplotlib, Sympy, Maxima, GAP, FLINT, R and many more.
#+end_quote

The Sage authors wanted a free, open-source, viable alternative to Maple,
Mathematica, MatLab, and other proprietary computer algebra systems (CASs), and
Sage was their solution.

* Notes about Sage
Sage is a very heavyweight software system (about 3GB at the time of this
writing), and as such may not be viable on all platforms. Only install Sage if
you have a direct need to do so.

** Using sage with org-babel

The real killer feature of sage is its ability to export complicated math
expressions to LaTeX, which you can probably guess, works incredibly well with
Org Mode. Here is an example =org-babel= Sage code block. Note the use of the
Org 9.7 =:async= header argument, which allows the user to continue using Emacs
while Org executes the Sage code in a separate session. You should probably use
=:async= anytime you use the =:session= header argument in an =org-babel= code
block. Try evaluating it with =C-c C-c= and checking out the results!

#+begin_src sage :exports none :session my-sage-session :tangle no :async
  M = Matrix([[1,2,3],[2,3,4],[4,2,1]])
  latex(M)
#+end_src

* sage-shell-mode
=sage-shell-mode= is an Elisp front-end for Sage.

It requires a local installation of Sage Math in order to function.

#+begin_src emacs-lisp
  (use-package sage-shell-mode
    :custom
    ;; Only enable this option for IPython version <7
    (sage-shell:use-prompt-toolkit nil)
    ;; Enable this option for IPython version >=7
    (sage-shell:use-simple-prompt t)
    ;; Disabling the following options can speed up Sage's startup.
    (sage-shell:set-ipython-version-on-startup nil)
    (sage-shell:check-ipython-version-on-startup nil)
    :init
    ;; The major mode for editing Sage code is oddly named "sage-shell:sage-mode" while the Org Babel
    ;; src block specifies is simply "sage". This confuses Org Mode when the user wishes to edit a
    ;; Sage code block using "C-c '". We have to specially map the Sage src block specifier to its
    ;; associated major mode to avoid this problem.
    (add-to-list 'org-src-lang-modes '("sage" . sage-shell:sage))
    (add-hook 'sage-shell-mode-hook
              (lambda ()
                ;; Use company completion in the Sage shell.
                (company-mode))))
#+end_src
