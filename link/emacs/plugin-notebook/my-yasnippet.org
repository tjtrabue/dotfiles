#+title:  Yasnippet Snippet System
#+author: Tom Trabue
#+email:  tom.trabue@gmail.com
#+date:   2020:05:26
#+STARTUP: fold

=yasnippet= is the snippet engine for Emacs. It behaves in a similar fashion to
UltiSnips for Vim, or TextMate's snippet system. You use =yasnippet= by typing a
snippet's /key/, which is a word used as an abbreviation for expanding the
snippet, followed by a /trigger/ for the snippet, which is a key or key chord
that expands the snippet based on the abbreviation before point.

Needed for performance:
#+begin_src emacs-lisp :tangle yes
;; -*- lexical-binding: t; -*-

#+end_src

* yasnippet
  =yasnippet= itself.

#+begin_src emacs-lisp :tangle yes
  (use-package yasnippet
    :commands (yas-minor-mode)
    :hook
    ((conf-mode prog-mode text-mode) . yas-minor-mode)
    :bind
    (:map yas-minor-mode-map
      ;; Use conditional expansion, falling back on helm-yas-complete if there
      ;; is no precise snippet name before point.
     ("C-c y" . yas-maybe-expand)
     ("<tab>" . nil)
     ("TAB" . nil))
    :config
    (yas-reload-all))
#+end_src

* yasnippet-snippets
  A big collection of pre-written snippets for =yasnippet=.

#+begin_src emacs-lisp :tangle yes
(use-package yasnippet-snippets
  :after yasnippet)
#+end_src

* helm-c-yasnippet
  Use helm menu for yasnippet completions

#+begin_src emacs-lisp :tangle yes
(use-package helm-c-yasnippet
  :after (helm yasnippet)
  :config
  (setq helm-yas-space-match-any-greedy t)
  ;; Must use global-set-key here because this function must be defined at the
  ;; top level to be used in conjunction with yas-maybe-expand.
  (global-set-key (kbd "C-c y") 'helm-yas-complete))
#+end_src
