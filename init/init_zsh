#!/usr/bin/env bash

# Variables {{{
declare DOTFILES_REPO="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
declare THIS_EXEC="$(basename "${BASH_SOURCE[0]}")"
declare DOTFILES_ZSH="${DOTFILES_REPO}/shell/zsh"
declare DOTFILES_ZDOTDIR="${DOTFILES_ZSH}/zdotdir"
declare USER_ZDOTDIR="${HOME}/.zsh"

# Logging variables
declare LOG_TO_FILE=""
declare LOG_LEVEL=3
# }}}

# Imports {{{
. "${DOTFILES_REPO}/shell/common/source/common.sh" && src
# }}}

# Functions {{{
_help() {
  cat <<EOF
${THIS_EXEC}

Initialize Zsh for a new system. This script links a few directories and
installs some Zsh plugins.

USAGE:
  ${THIS_EXEC} [OPTIONS]

OPTIONS:
  -h | --help
    Print the help message (this message) and exit.
EOF
}

link_zdotdir() {
  if [ ! -d "${USER_ZDOTDIR}" ]; then
    log_info "Linking Zsh dotfiles directory"
    ln -s "${DOTFILES_ZDOTDIR}" "${USER_ZDOTDIR}"
  else
    warn "${BLUE}${USER_ZDOTDIR}${NC} already exists!"
  fi
}

main() {
  print_header "Initializing Zsh Environment"
  link_zdotdir
}
# }}}

# Parse CLI Options {{{
args=$(getopt -o h --long help-n 'init_<name_here>' -- "$@")
eval set -- "$args"

# extract options and their arguments into variables.
while true; do
  case "$1" in
  -h | --help)
    _help
    exit 0
    ;;

  --)
    shift
    break
    ;;

  *)
    err "Unknown option $1 to ${THIS_EXEC}"
    exit 2
    ;;
  esac
done
# }}}

main "${@}"

# vim:foldenable:foldmethod=marker:
