#!/usr/bin/env bash

# Trap errors and print error message
set -euo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Variables {{{
declare DOTFILES_REPO="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
declare THIS_EXEC="$(basename "${BASH_SOURCE[0]}")"

declare IMPORT="${DOTFILES_REPO}/bash/source"
declare VERBOSE=false
declare JENV_HOME="${HOME}/.jenv"
# }}}

# Imports {{{
source "${IMPORT}/colors.bash"
source "${IMPORT}/functions_log.bash"
source "${IMPORT}/functions_path.bash"
# }}}

# Functions {{{
_help() {
  cat <<EOF
${THIS_EXEC}

Initializes the jenv Java version manager. jenv is similar to rbenv, the Ruby
environment manager, and is largely based upon rbenv.

USAGE:
  ${THIS_EXEC} [OPTIONS]

OPTIONS:
  -h | --help
    Print the help message (this message) and exit.

  -v | --verbose
    Run with extra logging output.
EOF
}

install_jenv() {
  git clone "https://github.com/jenv/jenv.git" "${JENV_HOME}"
}

# Add the path to the jenv bin directory to $PATH
add_jenv_bin_to_path() {
  atp "${JENV_HOME}/bin"
  spath "${PATH_FILE:-${HOME}/.path}" "PATH"
}

initialize_jenv() {
  log_info "Initializing jenv for environment"
  # Have to source the ~/.bashrc file to get the shim working.
  eval "$(jenv init -)"
  eval "${JENV_HOME}/bin/jenv" "enable-plugin export"
}

main() {
  print_header "Installing the Jenv Java Version Manager"
  install_jenv
  add_jenv_bin_to_path
  initialize_jenv

  cat <<EOF
Done! You may want to restart your terminal before using jenv.

The next step is to add the path(s) to your Java home directory to jenv.
To do this, run:

  jenv add </path/to/java/home>

Some examples:

  jenv add /usr/lib/jvm/default       # (on Arch Linux)
  jenv add \$(/usr/libexec/java_home) # (on macOS)
EOF
}
# }}}

# Parse CLI Options {{{
args=$(getopt -o hv --long help,verbose -n 'init_<name_here>' -- "$@")
eval set -- "$args"

# extract options and their arguments into variables.
while true ; do
  case "$1" in
    -v | --verbose)
      VERBOSE=true
      shift
      ;;

    -h | --help)
      _help
      exit 0
      ;;

    --)
      shift
      break
      ;;

    *)
      err "Unknown option $1 to ${THIS_EXEC}"
      exit 2
      ;;
  esac
done
# }}}

main "${@}"

# vim:foldenable:foldmethod=marker:
